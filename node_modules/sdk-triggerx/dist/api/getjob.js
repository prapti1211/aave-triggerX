"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getJobData = getJobData;
const errors_1 = require("../utils/errors");
/**
 * Fetch job data for a given API key by calling the backend endpoint.
 * @param client TriggerXClient instance
 * @returns JobResponse containing job data or error
 */
async function getJobData(client) {
    const apiKey = client.getApiKey();
    if (!apiKey) {
        return (0, errors_1.createErrorResponse)(new errors_1.AuthenticationError('API key is required but not provided'), 'Authentication error');
    }
    try {
        const data = await client.get('/api/jobs/by-apikey', {
            headers: {
                'Content-Type': 'application/json',
                'X-API-KEY': apiKey,
            },
        });
        return { success: true, jobs: data.jobs };
    }
    catch (error) {
        console.error('Error fetching job data:', error);
        const httpStatusCode = (0, errors_1.extractHttpStatusCode)(error);
        const errorCode = (0, errors_1.determineErrorCode)(error, httpStatusCode);
        if (error instanceof Error) {
            if (error.message.includes('network') || error.message.includes('timeout')) {
                return (0, errors_1.createErrorResponse)(new errors_1.NetworkError('Network error while fetching job data', { originalError: error }, httpStatusCode), 'Network error');
            }
            else if (error.message.includes('401') || error.message.includes('unauthorized')) {
                return (0, errors_1.createErrorResponse)(new errors_1.AuthenticationError('Unauthorized access to job data', { originalError: error }, 401), 'Authentication error');
            }
            else if (error.message.includes('API') || error.message.includes('response')) {
                return (0, errors_1.createErrorResponse)(new errors_1.ApiError('API error while fetching job data', { originalError: error }, httpStatusCode), 'API error');
            }
        }
        return (0, errors_1.createErrorResponse)(error, 'Failed to fetch job data');
    }
}
